<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<room>
  <caption></caption>
  <width>640</width>
  <height>480</height>
  <vsnap>32</vsnap>
  <hsnap>32</hsnap>
  <isometric>0</isometric>
  <speed>30</speed>
  <persistent>0</persistent>
  <colour>12632256</colour>
  <showcolour>-1</showcolour>
  <code>tictactoe_test();

randomize();

var perspective = Array(0, 0, 0, 0, 0, 0, 0, 0, 0, choose(1, -1)),
    player_identity = choose(1, -1),
    mcts_type = MctsType(
      tictactoe_generate_state,
      tictactoe_generate_moves,
      tictactoe_apply_move,
      tictactoe_final_reward,
      tictactoe_serialize,
      tictactoe_deserialize
    );
var input, outcome, message, mcts_tree, mcts_tree_moves;
do {
  // Generate board visualization
  message = "";
  for (var i = 0; i &lt; 9; i++) {
    switch (perspective[i]) {
      case -1:
        message += "X ";
      break;
      case 0:
        message += "- ";
      break;
      case 1:
        message += "O ";
      break;
    }
    if (i mod 3 == 2) {
      message += chr(13);
    }
  }
  if (player_identity == 1) {
    message += chr(13) + "You play O. Make your move:";
  }
  else {
    message += chr(13) + "You play X. Make your move:";
  }
  // Player plays
  if (perspective[9] == player_identity) {
    input = get_integer(message, 0);
    if (!tictactoe_apply_move(perspective, input)) {
      show_message("Invalid move.");
    }
  }
  // Computer plays
  else {
    mcts_tree = MctsTree(mcts_type, perspective,
      tictactoe_select,
      tictactoe_expand,
      tictactoe_playout,
      tictactoe_tentative_reward,
      tictactoe_reweight
    );
    show_debug_message(tictactoe_serialize(tictactoe_generate_state(perspective)));
    mcts_tree_evaluate(mcts_tree, 1000, 1000);
    show_debug_message("Should have made a move by now1");
    tictactoe_apply_move(perspective, mcts_tree_get_best_move(mcts_tree));
    //mcts_tree_moves = mcts_tree_get_best_moves(mcts_tree);
    show_debug_message("Should have made a move by now2");
    //tictactoe_apply_move(perspective, mcts_tree_moves[1]);
    //show_debug_message("Should have made a move by now3");
    mcts_tree = undefined;
  }
  // Check game end
  outcome = tictactoe_final_reward(perspective);
} until (!is_undefined(outcome))

// Game end message
message = "";
for (var i = 0; i &lt; 9; i++) {
  switch (perspective[i]) {
    case -1:
      message += "X ";
    break;
    case 0:
      message += "- ";
    break;
    case 1:
      message += "O ";
    break;
  }
  if (i mod 3 == 2) {
    message += chr(13);
  }
}
if (player_identity == 1) {
  message += chr(13) + "You play O.";
}
else {
  message += chr(13) + "You play X.";
}
if (outcome == 0) {
  message += chr(13) + "Tie game!";
}
else if (player_identity == outcome) {
  message += chr(13) + "You win!";
}
else {
  message += chr(13) + "You lose!";
}
show_message(message);</code>
  <enableViews>0</enableViews>
  <clearViewBackground>-1</clearViewBackground>
  <clearDisplayBuffer>-1</clearDisplayBuffer>
  <makerSettings>
    <isSet>0</isSet>
    <w>0</w>
    <h>0</h>
    <showGrid>0</showGrid>
    <showObjects>0</showObjects>
    <showTiles>0</showTiles>
    <showBackgrounds>0</showBackgrounds>
    <showForegrounds>0</showForegrounds>
    <showViews>0</showViews>
    <deleteUnderlyingObj>0</deleteUnderlyingObj>
    <deleteUnderlyingTiles>0</deleteUnderlyingTiles>
    <page>0</page>
    <xoffset>0</xoffset>
    <yoffset>0</yoffset>
  </makerSettings>
  <backgrounds>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
  </backgrounds>
  <views>
    <view visible="0" objName="" xview="0" yview="0" wview="1024" hview="768" xport="0" yport="0" wport="1024" hport="768" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="" xview="0" yview="0" wview="1024" hview="768" xport="0" yport="0" wport="1024" hport="768" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="" xview="0" yview="0" wview="1024" hview="768" xport="0" yport="0" wport="1024" hport="768" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="" xview="0" yview="0" wview="1024" hview="768" xport="0" yport="0" wport="1024" hport="768" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="" xview="0" yview="0" wview="1024" hview="768" xport="0" yport="0" wport="1024" hport="768" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="" xview="0" yview="0" wview="1024" hview="768" xport="0" yport="0" wport="1024" hport="768" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="" xview="0" yview="0" wview="1024" hview="768" xport="0" yport="0" wport="1024" hport="768" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="" xview="0" yview="0" wview="1024" hview="768" xport="0" yport="0" wport="1024" hport="768" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
  </views>
  <instances/>
  <tiles/>
  <PhysicsWorld>0</PhysicsWorld>
  <PhysicsWorldTop>0</PhysicsWorldTop>
  <PhysicsWorldLeft>0</PhysicsWorldLeft>
  <PhysicsWorldRight>1024</PhysicsWorldRight>
  <PhysicsWorldBottom>768</PhysicsWorldBottom>
  <PhysicsWorldGravityX>0</PhysicsWorldGravityX>
  <PhysicsWorldGravityY>10</PhysicsWorldGravityY>
  <PhysicsWorldPixToMeters>0.100000001490116</PhysicsWorldPixToMeters>
</room>
